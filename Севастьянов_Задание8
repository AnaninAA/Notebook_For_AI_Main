{"metadata":{"orig_nbformat":4,"kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"},"language_info":{"name":"python","version":"3.7.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# Зависимости\nimport numpy\nimport pandas\nimport matplotlib.pyplot\nimport sklearn\nfrom sklearn import cluster\nfrom sklearn import datasets\nfrom sklearn import silhouette_samples","metadata":{"trusted":true},"execution_count":2,"outputs":[{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mImportError\u001b[0m                               Traceback (most recent call last)","\u001b[0;32m/tmp/ipykernel_134/3304189752.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0msklearn\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mcluster\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0msklearn\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mdatasets\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0msklearn\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0msilhouette_samples\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mImportError\u001b[0m: cannot import name 'silhouette_samples' from 'sklearn' (/srv/conda/envs/notebook/lib/python3.7/site-packages/sklearn/__init__.py)"],"ename":"ImportError","evalue":"cannot import name 'silhouette_samples' from 'sklearn' (/srv/conda/envs/notebook/lib/python3.7/site-packages/sklearn/__init__.py)","output_type":"error"}]},{"cell_type":"code","source":"# Сформируем тестовый набор данных из 5000 записей, каждая из которых имеет две координаты.\n# При этом полученный набор данных будет иметь 4 явно выраженных кластера.\ntest_x, test_y = datasets.make_blobs(n_samples = 5000, n_features = 2, centers = 4)","metadata":{"scrolled":true,"trusted":true},"execution_count":3,"outputs":[]},{"cell_type":"code","source":"# Приведем полученный набор данных к формату pandas.DataFrame\nx = pandas.DataFrame(test_x)\nprint(x)","metadata":{"trusted":true},"execution_count":4,"outputs":[{"name":"stdout","text":"             0         1\n0    -2.120329 -6.186044\n1    -1.115006  0.991524\n2     2.838603  4.167496\n3    -5.097339 -0.509917\n4    -4.196216  1.096099\n...        ...       ...\n4995 -4.813374 -1.041670\n4996 -2.260237  0.574357\n4997 -5.156159  2.201203\n4998 -2.122662 -5.763750\n4999 -1.136680  1.900088\n\n[5000 rows x 2 columns]\n","output_type":"stream"}]},{"cell_type":"code","source":"# Отобразим полученный набор данных в виде точек на плоскости\nmatplotlib.pyplot.scatter(x[0], x[1])\nmatplotlib.pyplot.show()","metadata":{"trusted":true},"execution_count":5,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 432x288 with 1 Axes>","image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":"# Теперь запустим алгоритм k-средних, указав число кластеров, которое нам изначально известно\nkmeans = sklearn.cluster.KMeans(n_clusters = 4)\ny = kmeans.fit_predict(x)\n\n# Выведем значение инерции (именно оно минимизируется при использовании алгоритма k-средних)\nprint(kmeans.inertia_)","metadata":{"trusted":true},"execution_count":6,"outputs":[{"name":"stdout","text":"9165.862695109594\n","output_type":"stream"}]},{"cell_type":"code","source":"# Отобразим набор данных, используя разные цвета для разных кластеров\nmatplotlib.pyplot.scatter(x[0], x[1], c = y)\nmatplotlib.pyplot.show()    ","metadata":{"trusted":true},"execution_count":6,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 432x288 with 1 Axes>","image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":"# Загрузите файл \"worldcities.csv\" в DataFrame.\ndataframe = pandas.read_csv(\"datasets/worldcities.csv\")","metadata":{"trusted":true},"execution_count":7,"outputs":[]},{"cell_type":"code","source":"# Сформируйте новый DataFrame из столбцов 'lng' и 'lat' оригинального DataFrame.\ndataframe['lng']\ndataframe['lat']\ndataframe","metadata":{"trusted":true},"execution_count":8,"outputs":[]},{"cell_type":"code","source":"# Отобразите полученный DataFrame в виде точек, где координаты по оси X берутся из столбца 'lng', а координаты по оси Y - из столбца 'lat'.\nx='lng'\ny='lat'\nnew_data = dataframe[[x, y]]\nprint(new_data)","metadata":{"trusted":true},"execution_count":9,"outputs":[]},{"cell_type":"code","source":"new_data = dataframe[[x, y]]\nmatplotlib.pyplot.scatter(new_data['lng'], new_data['lat'])\nmatplotlib.pyplot.show()","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Создайте пустой список inertia для хранения результатов вычислительных экмпериментов.\ninertia=[]\nk=[]","metadata":{"trusted":true},"execution_count":10,"outputs":[]},{"cell_type":"code","source":"# Напишите цикл по количеству кластеров от 1 до 10.\n# В цикле запускайте алгоритм k-средних с текущим количеством кластеров,\n# добавляйте в список inertia значение для текущего результата работы алгоритма,\n# отобразите набор данных, используя разные цвета для разных кластеров.\n# Все шаги делайте по аналогии с примером выше.\nsmax=-1\nfor i in range(1,11):\n    kmeans = sklearn.cluster.KMeans(n_clusters = i)\n    y = kmeans.fit_predict(new_data)\n    inertia.append(kmeans.inertia_)\n    k.append(i)\n    matplotlib.pyplot.scatter(new_data['lng'], new_data['lat'], c = y)\n    matplotlib.pyplot.show()","metadata":{"trusted":true},"execution_count":11,"outputs":[]},{"cell_type":"code","source":"#Поиск максимального Коэффициента силуэта\nsmax=-1\nfor i in range(2,11):\n    kmeans = sklearn.cluster.KMeans(n_clusters = i)\n    y = kmeans.fit_predict(new_data)\n    s = sum(silhouette_samples(new_data, y))/len(new_data)\n    if s>smax:\n        smax=s\n        k1=i","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"kmeans = sklearn.cluster.KMeans(n_clusters = k1)\ny = kmeans.fit_predict(new_data)\nmatplotlib.pyplot.scatter(new_data['lng'], new_data['lat'], c = y)\nmatplotlib.pyplot.show()","metadata":{"trusted":true},"execution_count":13,"outputs":[{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m/tmp/ipykernel_67/2653398314.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mkmeans\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msklearn\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcluster\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mKMeans\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mn_clusters\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mk1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0my\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mkmeans\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit_predict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnew_data\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mmatplotlib\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpyplot\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mscatter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnew_data\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'lng'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnew_data\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'lat'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mc\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mmatplotlib\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpyplot\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshow\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'k1' is not defined"],"ename":"NameError","evalue":"name 'k1' is not defined","output_type":"error"}]},{"cell_type":"code","source":"# Постройте график изменения величины inertia от количества кластеров.\nmatplotlib.pyplot.plot(k,inertia)\nmatplotlib.pyplot.show()","metadata":{"trusted":true},"execution_count":12,"outputs":[]}]}