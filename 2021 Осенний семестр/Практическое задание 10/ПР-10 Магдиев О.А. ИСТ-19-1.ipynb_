{"nbformat":4,"nbformat_minor":0,"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.6.12"},"colab":{"name":"ПР-10 Магдиев О.А. ИСТ-19-1.ipynb\"","provenance":[{"file_id":"1eSBpbp5xb4Lj-En7cv4MoXgXC6gBvG18","timestamp":1632580182800}],"collapsed_sections":[]}},"cells":[{"cell_type":"code","metadata":{"id":"AUcLh2CFXIdN","executionInfo":{"status":"ok","timestamp":1633966182005,"user_tz":-180,"elapsed":4,"user":{"displayName":"Marleena M.","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01554857910732208880"}}},"source":["# Зависимости\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import random\n","\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import MinMaxScaler\n","from sklearn.compose import ColumnTransformer\n","\n","from sklearn.tree import DecisionTreeRegressor, DecisionTreeClassifier, plot_tree\n","\n","from sklearn.metrics import mean_squared_error, f1_score"],"execution_count":553,"outputs":[]},{"cell_type":"code","metadata":{"id":"X2a4VTQh4h3K","executionInfo":{"status":"ok","timestamp":1633966182391,"user_tz":-180,"elapsed":13,"user":{"displayName":"Marleena M.","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01554857910732208880"}}},"source":[""],"execution_count":553,"outputs":[]},{"cell_type":"code","metadata":{"id":"c0Je-MwpXIdU","executionInfo":{"status":"ok","timestamp":1633966182392,"user_tz":-180,"elapsed":13,"user":{"displayName":"Marleena M.","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01554857910732208880"}}},"source":["# Генерируем уникальный seed\n","my_code = \"Johnson\"\n","seed_limit = 2 ** 32\n","my_seed = int.from_bytes(my_code.encode(), \"little\") % seed_limit"],"execution_count":554,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iGVUgSgmZ1w2","executionInfo":{"status":"ok","timestamp":1633966182392,"user_tz":-180,"elapsed":13,"user":{"displayName":"Marleena M.","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01554857910732208880"}},"outputId":"bb1ad70d-48f5-44fd-89fe-2e4f4a0d1e27"},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":555,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","metadata":{"id":"S1DiTOv_XIdW","executionInfo":{"status":"ok","timestamp":1633966182393,"user_tz":-180,"elapsed":8,"user":{"displayName":"Marleena M.","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01554857910732208880"}}},"source":["# Читаем данные из файла\n","url=(\"/content/drive/My Drive/5 семестр/Инфокоммуникационные системы и сети\\/Notebook_For_AI_Main-master/2021 Осенний семестр/datasets/Fish.csv\")\n","example_data = pd.read_csv(url, delimiter=',')"],"execution_count":556,"outputs":[]},{"cell_type":"code","metadata":{"scrolled":false,"id":"nMJneKlAXIdX","colab":{"base_uri":"https://localhost:8080/","height":204},"executionInfo":{"status":"ok","timestamp":1633966182927,"user_tz":-180,"elapsed":542,"user":{"displayName":"Marleena M.","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01554857910732208880"}},"outputId":"bb902f71-b07e-4f7c-befb-3c5706641a6c"},"source":["example_data.head()"],"execution_count":557,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Species</th>\n","      <th>Weight</th>\n","      <th>Length1</th>\n","      <th>Length2</th>\n","      <th>Length3</th>\n","      <th>Height</th>\n","      <th>Width</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Bream</td>\n","      <td>242.0</td>\n","      <td>23.2</td>\n","      <td>25.4</td>\n","      <td>30.0</td>\n","      <td>11.5200</td>\n","      <td>4.0200</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Bream</td>\n","      <td>290.0</td>\n","      <td>24.0</td>\n","      <td>26.3</td>\n","      <td>31.2</td>\n","      <td>12.4800</td>\n","      <td>4.3056</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Bream</td>\n","      <td>340.0</td>\n","      <td>23.9</td>\n","      <td>26.5</td>\n","      <td>31.1</td>\n","      <td>12.3778</td>\n","      <td>4.6961</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Bream</td>\n","      <td>363.0</td>\n","      <td>26.3</td>\n","      <td>29.0</td>\n","      <td>33.5</td>\n","      <td>12.7300</td>\n","      <td>4.4555</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Bream</td>\n","      <td>430.0</td>\n","      <td>26.5</td>\n","      <td>29.0</td>\n","      <td>34.0</td>\n","      <td>12.4440</td>\n","      <td>5.1340</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  Species  Weight  Length1  Length2  Length3   Height   Width\n","0   Bream   242.0     23.2     25.4     30.0  11.5200  4.0200\n","1   Bream   290.0     24.0     26.3     31.2  12.4800  4.3056\n","2   Bream   340.0     23.9     26.5     31.1  12.3778  4.6961\n","3   Bream   363.0     26.3     29.0     33.5  12.7300  4.4555\n","4   Bream   430.0     26.5     29.0     34.0  12.4440  5.1340"]},"metadata":{},"execution_count":557}]},{"cell_type":"code","metadata":{"id":"TmvS5-MMXIdY","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1633966182928,"user_tz":-180,"elapsed":58,"user":{"displayName":"Marleena M.","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01554857910732208880"}},"outputId":"f4b2e890-2ade-4136-babe-65dca20c061a"},"source":["# Определим размер валидационной и тестовой выборок\n","val_test_size = round(0.2*len(example_data))\n","print(val_test_size)"],"execution_count":558,"outputs":[{"output_type":"stream","name":"stdout","text":["32\n"]}]},{"cell_type":"code","metadata":{"id":"ZfzyrnIfXIdZ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1633966182929,"user_tz":-180,"elapsed":51,"user":{"displayName":"Marleena M.","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01554857910732208880"}},"outputId":"09d07d91-98d4-4ac2-b1db-559f93b08cef"},"source":["# Создадим обучающую, валидационную и тестовую выборки\n","random_state = my_seed\n","train_val, test = train_test_split(example_data, test_size=val_test_size, random_state=random_state)\n","train, val = train_test_split(train_val, test_size=val_test_size, random_state=random_state)\n","print(len(train), len(val), len(test))"],"execution_count":559,"outputs":[{"output_type":"stream","name":"stdout","text":["95 32 32\n"]}]},{"cell_type":"code","metadata":{"id":"cCKnxG4oXIda","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1633966182929,"user_tz":-180,"elapsed":46,"user":{"displayName":"Marleena M.","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01554857910732208880"}},"outputId":"03fc3b25-eda7-4dc1-cb8a-afe09c362ec3"},"source":["# Значения в числовых столбцах преобразуем к отрезку [0,1].\n","# Для настройки скалировщика используем только обучающую выборку.\n","num_columns = ['Weight', 'Length1', 'Length2', 'Length3', 'Height', 'Width']\n","\n","ct = ColumnTransformer(transformers=[('numerical', MinMaxScaler(), num_columns)], remainder='passthrough')\n","ct.fit(train)"],"execution_count":560,"outputs":[{"output_type":"execute_result","data":{"text/plain":["ColumnTransformer(n_jobs=None, remainder='passthrough', sparse_threshold=0.3,\n","                  transformer_weights=None,\n","                  transformers=[('numerical',\n","                                 MinMaxScaler(copy=True, feature_range=(0, 1)),\n","                                 ['Weight', 'Length1', 'Length2', 'Length3',\n","                                  'Height', 'Width'])],\n","                  verbose=False)"]},"metadata":{},"execution_count":560}]},{"cell_type":"code","metadata":{"id":"u_4l357vXIdc","executionInfo":{"status":"ok","timestamp":1633966182930,"user_tz":-180,"elapsed":42,"user":{"displayName":"Marleena M.","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01554857910732208880"}}},"source":["# Преобразуем значения, тип данных приводим к DataFrame\n","sc_train = pd.DataFrame(ct.transform(train))\n","sc_test = pd.DataFrame(ct.transform(test))\n","sc_val = pd.DataFrame(ct.transform(val))"],"execution_count":561,"outputs":[]},{"cell_type":"code","metadata":{"id":"OloM1oh6XIdd","executionInfo":{"status":"ok","timestamp":1633966182931,"user_tz":-180,"elapsed":43,"user":{"displayName":"Marleena M.","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01554857910732208880"}}},"source":["# Устанавливаем названия столбцов\n","column_names = num_columns + ['Species']\n","sc_train.columns = column_names\n","sc_test.columns = column_names\n","sc_val.columns = column_names"],"execution_count":562,"outputs":[]},{"cell_type":"code","metadata":{"id":"I_MLUcMvXIde","colab":{"base_uri":"https://localhost:8080/","height":419},"executionInfo":{"status":"ok","timestamp":1633966182932,"user_tz":-180,"elapsed":43,"user":{"displayName":"Marleena M.","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01554857910732208880"}},"outputId":"fe73345e-a736-436f-b1ab-f08328fa0563"},"source":["sc_train"],"execution_count":563,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Weight</th>\n","      <th>Length1</th>\n","      <th>Length2</th>\n","      <th>Length3</th>\n","      <th>Height</th>\n","      <th>Width</th>\n","      <th>Species</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.37896</td>\n","      <td>0.482474</td>\n","      <td>0.486434</td>\n","      <td>0.539855</td>\n","      <td>0.806948</td>\n","      <td>0.575975</td>\n","      <td>Bream</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.282354</td>\n","      <td>0.670103</td>\n","      <td>0.660853</td>\n","      <td>0.664855</td>\n","      <td>0.321822</td>\n","      <td>0.461618</td>\n","      <td>Pike</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.121761</td>\n","      <td>0.463918</td>\n","      <td>0.463178</td>\n","      <td>0.471014</td>\n","      <td>0.222393</td>\n","      <td>0.328146</td>\n","      <td>Pike</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.114234</td>\n","      <td>0.31134</td>\n","      <td>0.313953</td>\n","      <td>0.315217</td>\n","      <td>0.290077</td>\n","      <td>0.43953</td>\n","      <td>Perch</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.623612</td>\n","      <td>0.614433</td>\n","      <td>0.612403</td>\n","      <td>0.628623</td>\n","      <td>0.61651</td>\n","      <td>0.772074</td>\n","      <td>Whitefish</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>90</th>\n","      <td>0.00878239</td>\n","      <td>0.129897</td>\n","      <td>0.127907</td>\n","      <td>0.134058</td>\n","      <td>0.0693104</td>\n","      <td>0.117219</td>\n","      <td>Smelt</td>\n","    </tr>\n","    <tr>\n","      <th>91</th>\n","      <td>0.074713</td>\n","      <td>0.237113</td>\n","      <td>0.244186</td>\n","      <td>0.248188</td>\n","      <td>0.229623</td>\n","      <td>0.369291</td>\n","      <td>Perch</td>\n","    </tr>\n","    <tr>\n","      <th>92</th>\n","      <td>0.0841227</td>\n","      <td>0.278351</td>\n","      <td>0.273256</td>\n","      <td>0.293478</td>\n","      <td>0.279425</td>\n","      <td>0.321014</td>\n","      <td>Roach</td>\n","    </tr>\n","    <tr>\n","      <th>93</th>\n","      <td>0.00395207</td>\n","      <td>0.0824742</td>\n","      <td>0.0736434</td>\n","      <td>0.0833333</td>\n","      <td>0.0204203</td>\n","      <td>0.0487709</td>\n","      <td>Smelt</td>\n","    </tr>\n","    <tr>\n","      <th>94</th>\n","      <td>0.0841227</td>\n","      <td>0.237113</td>\n","      <td>0.238372</td>\n","      <td>0.26087</td>\n","      <td>0.394861</td>\n","      <td>0.3167</td>\n","      <td>Parkki</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>95 rows × 7 columns</p>\n","</div>"],"text/plain":["        Weight    Length1    Length2  ...     Height      Width    Species\n","0      0.37896   0.482474   0.486434  ...   0.806948   0.575975      Bream\n","1     0.282354   0.670103   0.660853  ...   0.321822   0.461618       Pike\n","2     0.121761   0.463918   0.463178  ...   0.222393   0.328146       Pike\n","3     0.114234    0.31134   0.313953  ...   0.290077    0.43953      Perch\n","4     0.623612   0.614433   0.612403  ...    0.61651   0.772074  Whitefish\n","..         ...        ...        ...  ...        ...        ...        ...\n","90  0.00878239   0.129897   0.127907  ...  0.0693104   0.117219      Smelt\n","91    0.074713   0.237113   0.244186  ...   0.229623   0.369291      Perch\n","92   0.0841227   0.278351   0.273256  ...   0.279425   0.321014      Roach\n","93  0.00395207  0.0824742  0.0736434  ...  0.0204203  0.0487709      Smelt\n","94   0.0841227   0.237113   0.238372  ...   0.394861     0.3167     Parkki\n","\n","[95 rows x 7 columns]"]},"metadata":{},"execution_count":563}]},{"cell_type":"code","metadata":{"id":"Y2LCVDkfXIdf","executionInfo":{"status":"ok","timestamp":1633966182932,"user_tz":-180,"elapsed":41,"user":{"displayName":"Marleena M.","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01554857910732208880"}}},"source":["# Задание №1 - анализ деревьев принятия решений в задаче регрессии\n","# https://scikit-learn.org/stable/modules/generated/sklearn.tree.DecisionTreeRegressor.html\n","# criterion : {“mse”, “friedman_mse”, “mae”, “poisson”}, default=”mse”\n","# splitter : {“best”, “random”}, default=”best”\n","# max_depth : int, default=None\n","# min_samples_split : int or float, default=2\n","# min_samples_leaf : int or float, default=1"],"execution_count":564,"outputs":[]},{"cell_type":"code","metadata":{"scrolled":true,"id":"aPaj72cwXIdg","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1633966182933,"user_tz":-180,"elapsed":41,"user":{"displayName":"Marleena M.","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01554857910732208880"}},"outputId":"4e372327-3863-41c9-cd7a-57dda620578b"},"source":["# Выбираем 4 числовых переменных, три их них будут предикторами, одна - зависимой переменной\n","n = 4\n","labels = random.sample(num_columns, n)\n","\n","y_label = labels[0]\n","x_labels = labels[1:]\n","\n","print(x_labels)\n","print(y_label)"],"execution_count":565,"outputs":[{"output_type":"stream","name":"stdout","text":["['Length1', 'Height', 'Length3']\n","Length2\n"]}]},{"cell_type":"code","metadata":{"id":"DWKC2zDkXIdh","executionInfo":{"status":"ok","timestamp":1633966182933,"user_tz":-180,"elapsed":37,"user":{"displayName":"Marleena M.","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01554857910732208880"}}},"source":["# Отберем необходимые параметры\n","x_train = sc_train[x_labels]\n","x_test = sc_test[x_labels]\n","x_val = sc_val[x_labels]\n","\n","y_train = sc_train[y_label]\n","y_test = sc_test[y_label]\n","y_val = sc_val[y_label]"],"execution_count":566,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"4KgibKha7K18"},"source":[""]},{"cell_type":"code","metadata":{"id":"YjvY1wsaXIdh","colab":{"base_uri":"https://localhost:8080/","height":419},"executionInfo":{"status":"ok","timestamp":1633966182934,"user_tz":-180,"elapsed":35,"user":{"displayName":"Marleena M.","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01554857910732208880"}},"outputId":"f2584627-3273-4f80-db59-060f14b8959e"},"source":["x_train"],"execution_count":567,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Length1</th>\n","      <th>Height</th>\n","      <th>Length3</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.482474</td>\n","      <td>0.806948</td>\n","      <td>0.539855</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.670103</td>\n","      <td>0.321822</td>\n","      <td>0.664855</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.463918</td>\n","      <td>0.222393</td>\n","      <td>0.471014</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.31134</td>\n","      <td>0.290077</td>\n","      <td>0.315217</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.614433</td>\n","      <td>0.61651</td>\n","      <td>0.628623</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>90</th>\n","      <td>0.129897</td>\n","      <td>0.0693104</td>\n","      <td>0.134058</td>\n","    </tr>\n","    <tr>\n","      <th>91</th>\n","      <td>0.237113</td>\n","      <td>0.229623</td>\n","      <td>0.248188</td>\n","    </tr>\n","    <tr>\n","      <th>92</th>\n","      <td>0.278351</td>\n","      <td>0.279425</td>\n","      <td>0.293478</td>\n","    </tr>\n","    <tr>\n","      <th>93</th>\n","      <td>0.0824742</td>\n","      <td>0.0204203</td>\n","      <td>0.0833333</td>\n","    </tr>\n","    <tr>\n","      <th>94</th>\n","      <td>0.237113</td>\n","      <td>0.394861</td>\n","      <td>0.26087</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>95 rows × 3 columns</p>\n","</div>"],"text/plain":["      Length1     Height    Length3\n","0    0.482474   0.806948   0.539855\n","1    0.670103   0.321822   0.664855\n","2    0.463918   0.222393   0.471014\n","3     0.31134   0.290077   0.315217\n","4    0.614433    0.61651   0.628623\n","..        ...        ...        ...\n","90   0.129897  0.0693104   0.134058\n","91   0.237113   0.229623   0.248188\n","92   0.278351   0.279425   0.293478\n","93  0.0824742  0.0204203  0.0833333\n","94   0.237113   0.394861    0.26087\n","\n","[95 rows x 3 columns]"]},"metadata":{},"execution_count":567}]},{"cell_type":"code","metadata":{"id":"-HbiJ74yXIdi","executionInfo":{"status":"ok","timestamp":1633966182934,"user_tz":-180,"elapsed":33,"user":{"displayName":"Marleena M.","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01554857910732208880"}}},"source":["# Создайте 4 модели с различными критериями ветвления criterion: 'mse', 'friedman_mse', 'mae', 'poisson'.\n","# Решите получившуюся задачу регрессии с помощью созданных моделей и сравните их эффективность.\n","# При необходимости применяйте параметры splitter, max_depth, min_samples_split, min_samples_leaf\n","# Укажите, какая модель решает задачу лучше других.\n","r_model1 = DecisionTreeRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,\n","                      max_features=None, max_leaf_nodes=None,\n","                      min_impurity_decrease=0.0, min_impurity_split=None,\n","                      min_samples_leaf=1, min_samples_split=2,\n","                      min_weight_fraction_leaf=0.0, presort='deprecated',\n","                      random_state=None, splitter='best')\n","r_model2 = DecisionTreeRegressor(ccp_alpha=0.0, criterion='friedman_mse', max_depth=None,\n","                      max_features=None, max_leaf_nodes=None,\n","                      min_impurity_decrease=0.0, min_impurity_split=None,\n","                      min_samples_leaf=1, min_samples_split=2,\n","                      min_weight_fraction_leaf=0.0, presort='deprecated',\n","                      random_state=None, splitter='best')\n","r_model3 = DecisionTreeRegressor(ccp_alpha=0.0, criterion='mae', max_depth=None,\n","                      max_features=None, max_leaf_nodes=None,\n","                      min_impurity_decrease=0.0, min_impurity_split=None,\n","                      min_samples_leaf=1, min_samples_split=2,\n","                      min_weight_fraction_leaf=0.0, presort='deprecated',\n","                      random_state=None, splitter='best')\n","r_model4 = DecisionTreeRegressor(\"poisson\") #Не работает\n"],"execution_count":568,"outputs":[]},{"cell_type":"code","metadata":{"id":"xrEg3GRltFs0","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1633966182935,"user_tz":-180,"elapsed":33,"user":{"displayName":"Marleena M.","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01554857910732208880"}},"outputId":"c2fdad68-d98c-471b-d8d1-f4c92907a734"},"source":["r_model1.fit(x_train,y_train)\n","a=r_model1.predict(x_test)\n","mse1 = mean_squared_error(y_test, a)\n","mse1"],"execution_count":569,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.0003267531999278898"]},"metadata":{},"execution_count":569}]},{"cell_type":"code","metadata":{"id":"dFo63i0XyeJl","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1633966182936,"user_tz":-180,"elapsed":31,"user":{"displayName":"Marleena M.","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01554857910732208880"}},"outputId":"c063bf1e-1bb1-4f5e-cd18-5376ed0ee9dc"},"source":["r_model2.fit(x_train,y_train)\n","a=r_model2.predict(x_test)\n","mse1 = mean_squared_error(y_test, a)\n","mse1"],"execution_count":570,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.0007687620185085035"]},"metadata":{},"execution_count":570}]},{"cell_type":"code","metadata":{"id":"2XXFtyjozmtO","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1633966182936,"user_tz":-180,"elapsed":28,"user":{"displayName":"Marleena M.","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01554857910732208880"}},"outputId":"cbf7a5a6-d997-4f77-b3f7-01a790568626"},"source":["r_model3.fit(x_train,y_train)\n","a=r_model3.predict(x_test)\n","mse1 = mean_squared_error(y_test, a)\n","mse1"],"execution_count":571,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.0004355535649900854"]},"metadata":{},"execution_count":571}]},{"cell_type":"code","metadata":{"id":"gTH-2CIOXIdj","colab":{"base_uri":"https://localhost:8080/","height":479},"executionInfo":{"status":"ok","timestamp":1633966186914,"user_tz":-180,"elapsed":4002,"user":{"displayName":"Marleena M.","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01554857910732208880"}},"outputId":"2b95a8b8-1a04-418e-d13e-ec967c762092"},"source":["# Вывод на экран дерева tree.\n","# max_depth - максимальная губина отображения, по умолчанию выводится дерево целиком.\n","plot_tree(r_model1, max_depth=1)\n","plt.show()\n","plot_tree(r_model1)\n","plt.show()"],"execution_count":572,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"jabgWTuvXIdk","executionInfo":{"status":"ok","timestamp":1633966186915,"user_tz":-180,"elapsed":34,"user":{"displayName":"Marleena M.","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01554857910732208880"}}},"source":["# Задание №2 - анализ деревьев принятия решений в задаче классификации\n","# https://scikit-learn.org/stable/modules/generated/sklearn.tree.DecisionTreeClassifier.html\n","# criterion : {“gini”, “entropy”}, default=”gini”\n","# splitter : {“best”, “random”}, default=”best”\n","# max_depth : int, default=None\n","# min_samples_split : int or float, default=2\n","# min_samples_leaf : int or float, default=1"],"execution_count":573,"outputs":[]},{"cell_type":"code","metadata":{"id":"80-jtkq1XIdk","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1633966186916,"user_tz":-180,"elapsed":33,"user":{"displayName":"Marleena M.","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01554857910732208880"}},"outputId":"d8a8ae30-08bc-4118-df07-cf1f09c74e41"},"source":["# Выбираем 2 числовых переменных, которые будут параметрами элементов набора данных\n","# Метка класса всегда 'Species'\n","n = 2\n","x_labels = random.sample(num_columns, n)\n","y_label = 'Species'\n","\n","print(x_labels)\n","print(y_label)"],"execution_count":574,"outputs":[{"output_type":"stream","name":"stdout","text":["['Width', 'Length1']\n","Species\n"]}]},{"cell_type":"code","metadata":{"scrolled":true,"id":"_0vAKKjTXIdl","executionInfo":{"status":"ok","timestamp":1633966186917,"user_tz":-180,"elapsed":28,"user":{"displayName":"Marleena M.","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01554857910732208880"}}},"source":["# Отберем необходимые параметры\n","x_train = sc_train[x_labels]\n","x_test = sc_test[x_labels]\n","x_val = sc_val[x_labels]\n","\n","y_train = sc_train[y_label]\n","y_test = sc_test[y_label]\n","y_val = sc_val[y_label]"],"execution_count":575,"outputs":[]},{"cell_type":"code","metadata":{"id":"BHH2CpNFXIdm","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1633966186917,"user_tz":-180,"elapsed":27,"user":{"displayName":"Marleena M.","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01554857910732208880"}},"outputId":"9c905d9e-f952-4bf3-e205-adc12e188070"},"source":["y_train"],"execution_count":576,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0         Bream\n","1          Pike\n","2          Pike\n","3         Perch\n","4     Whitefish\n","        ...    \n","90        Smelt\n","91        Perch\n","92        Roach\n","93        Smelt\n","94       Parkki\n","Name: Species, Length: 95, dtype: object"]},"metadata":{},"execution_count":576}]},{"cell_type":"code","metadata":{"id":"f1dcNf12XIdm","executionInfo":{"status":"ok","timestamp":1633966186918,"user_tz":-180,"elapsed":25,"user":{"displayName":"Marleena M.","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01554857910732208880"}}},"source":["# Создайте 4 модели с различными критериями ветвления criterion : 'gini', 'entropy' и splitter : 'best', 'random'.\n","# Решите получившуюся задачу классификации с помощью созданных моделей и сравните их эффективность.\n","# При необходимости применяйте параметры max_depth, min_samples_split, min_samples_leaf\n","# Укажите, какая модель решает задачу лучше других.\n","c_model1 = DecisionTreeClassifier(ccp_alpha=0.0, criterion='gini', max_depth=1,\n","                      max_features=None, max_leaf_nodes=None,\n","                      min_impurity_decrease=0.0, min_impurity_split=1,\n","                      min_samples_leaf=1, min_samples_split=2,\n","                      min_weight_fraction_leaf=0.0, presort='deprecated',\n","                      random_state=None, splitter='best')\n","c_model2 = DecisionTreeClassifier(ccp_alpha=0.0, criterion='entropy', max_depth=2,\n","                      max_features=None, max_leaf_nodes=None,\n","                      min_impurity_decrease=0.0, min_impurity_split=6,\n","                      min_samples_leaf=1, min_samples_split=2,\n","                      min_weight_fraction_leaf=0.0, presort='deprecated',\n","                      random_state=None, splitter='best')\n","c_model3 = DecisionTreeClassifier(ccp_alpha=0.0, criterion='mae', max_depth=3,\n","                      max_features=None, max_leaf_nodes=None,\n","                      min_impurity_decrease=0.0, min_impurity_split=5,\n","                      min_samples_leaf=1, min_samples_split=2,\n","                      min_weight_fraction_leaf=0.0, presort='deprecated',\n","                      random_state=None, splitter='best')\n","c_model4 = DecisionTreeClassifier(ccp_alpha=0.0, criterion='poisson', max_depth=4,\n","                      max_features=None, max_leaf_nodes=None,\n","                      min_impurity_decrease=0.0, min_impurity_split=2,\n","                      min_samples_leaf=1, min_samples_split=2,\n","                      min_weight_fraction_leaf=0.0, presort='deprecated',\n","                      random_state=None, splitter='random')"],"execution_count":577,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RodVfcHE8QKs","executionInfo":{"status":"ok","timestamp":1633966186918,"user_tz":-180,"elapsed":24,"user":{"displayName":"Marleena M.","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01554857910732208880"}},"outputId":"9f74ccf4-48e6-4cdc-a69f-962d7536f0d2"},"source":["c_model1.fit(x_train,y_train)\n","c_model1.predict(x_test)"],"execution_count":578,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/tree/_classes.py:301: FutureWarning: The min_impurity_split parameter is deprecated. Its default value will change from 1e-7 to 0 in version 0.23, and it will be removed in 0.25. Use the min_impurity_decrease parameter instead.\n","  FutureWarning)\n"]},{"output_type":"execute_result","data":{"text/plain":["array(['Perch', 'Perch', 'Perch', 'Perch', 'Perch', 'Perch', 'Perch',\n","       'Perch', 'Perch', 'Perch', 'Perch', 'Perch', 'Perch', 'Perch',\n","       'Perch', 'Perch', 'Perch', 'Perch', 'Perch', 'Perch', 'Perch',\n","       'Perch', 'Perch', 'Perch', 'Perch', 'Perch', 'Perch', 'Perch',\n","       'Perch', 'Perch', 'Perch', 'Perch'], dtype=object)"]},"metadata":{},"execution_count":578}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cPCvGuzQ9iAr","executionInfo":{"status":"ok","timestamp":1633966186919,"user_tz":-180,"elapsed":21,"user":{"displayName":"Marleena M.","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01554857910732208880"}},"outputId":"340ed4b3-5798-4b17-cf2b-0ed349b73401"},"source":["c_model2.fit(x_train,y_train)\n","c_model2.predict(x_test)"],"execution_count":579,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/tree/_classes.py:301: FutureWarning: The min_impurity_split parameter is deprecated. Its default value will change from 1e-7 to 0 in version 0.23, and it will be removed in 0.25. Use the min_impurity_decrease parameter instead.\n","  FutureWarning)\n"]},{"output_type":"execute_result","data":{"text/plain":["array(['Perch', 'Perch', 'Perch', 'Perch', 'Perch', 'Perch', 'Perch',\n","       'Perch', 'Perch', 'Perch', 'Perch', 'Perch', 'Perch', 'Perch',\n","       'Perch', 'Perch', 'Perch', 'Perch', 'Perch', 'Perch', 'Perch',\n","       'Perch', 'Perch', 'Perch', 'Perch', 'Perch', 'Perch', 'Perch',\n","       'Perch', 'Perch', 'Perch', 'Perch'], dtype=object)"]},"metadata":{},"execution_count":579}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":180},"id":"tB2lN7Jy9ibf","executionInfo":{"status":"error","timestamp":1633966275801,"user_tz":-180,"elapsed":486,"user":{"displayName":"Marleena M.","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01554857910732208880"}},"outputId":"a6b122c1-fb69-44ef-bb21-bd86291cf507"},"source":["#c_model3.fit(x_train,y_train,) Не работает\n","#c_model3.predict(x_test)Не работает"],"execution_count":584,"outputs":[{"output_type":"error","ename":"TypeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-584-c7e6ad8ec8dd>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mc_model3\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx_train\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0my_train\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mmultioutput\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'raw_values'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mc_model3\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx_test\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mTypeError\u001b[0m: fit() got an unexpected keyword argument 'multioutput'"]}]},{"cell_type":"code","metadata":{"id":"MF74iq0v9inz","executionInfo":{"status":"ok","timestamp":1633966186920,"user_tz":-180,"elapsed":17,"user":{"displayName":"Marleena M.","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01554857910732208880"}}},"source":["#c_model4.fit(x_train,y_train)Не работает\n","#c_model4.predict(x_test)Не работает"],"execution_count":581,"outputs":[]},{"cell_type":"code","metadata":{"id":"hrMCKo3MXIdn","colab":{"base_uri":"https://localhost:8080/","height":248},"executionInfo":{"status":"ok","timestamp":1633966186921,"user_tz":-180,"elapsed":18,"user":{"displayName":"Marleena M.","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01554857910732208880"}},"outputId":"b52e9634-6faf-4785-dcec-66b179ee707f"},"source":["# Вывод на экран дерева tree.\n","# max_depth - максимальная губина отображения, по умолчанию выводится дерево целиком.\n","plot_tree(c_model1, max_depth=1)\n","plt.show()"],"execution_count":582,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"FjienfhUXIdo","colab":{"base_uri":"https://localhost:8080/","height":248},"executionInfo":{"status":"ok","timestamp":1633966187406,"user_tz":-180,"elapsed":502,"user":{"displayName":"Marleena M.","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01554857910732208880"}},"outputId":"fdc32a4b-550c-42ff-9710-005d5ee5317b"},"source":["plot_tree(c_model1)\n","plt.show()"],"execution_count":583,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]}]}